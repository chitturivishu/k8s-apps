apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: redis-ha
    redis-node: "true"
    redis-sentinel: "true"
    role: master
  name: redis-ha-master
spec:
  selector:
    matchLabels:
      app: redis-ha
      redis-node: "true"
      redis-sentinel: "true"
      role: master
  template:
    metadata:
      labels:
        app: redis-ha
        redis-node: "true"
        redis-sentinel: "true"
        role: master
    spec:
      containers:
      - name: redis
        image: kairen/redis:4.0.2
        env:
        - name: MASTER
          value: "true"
        ports:
        - containerPort: 6379
          protocol: TCP
        resources:
          limits:
            memory: 700Mi
          requests:
            cpu: 100m
            memory: 200Mi
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /redis-data
          name: data
      - name: sentinel
        image: kairen/redis:4.0.2
        env:
        - name: SENTINEL
          value: "true"
        ports:
        - containerPort: 26379
          protocol: TCP
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        imagePullPolicy: IfNotPresent
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: redis-rbc-pvc
